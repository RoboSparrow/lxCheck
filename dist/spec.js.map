{"version":3,"sources":["../src/spec.js"],"names":[],"mappings":"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","file":"spec.js","sourcesContent":["/*src/spec.js*/\n\n/* global setTimeout */\n(function(Helper, req){\n    'use strict';\n\n    var statementId;\n    var putStatementId;\n    var statement;\n    var voidingStatement;\n\n\n    ////\n    //  Statement API\n    ////\n\n    describe('Statement API', function() {\n\n        statement = {\n            actor: {\n                'mbox': 'mailto: anonymous@lxhive.com',\n                'name': 'Anoymous'\n            },\n            verb: {\n                'id': 'http://adlnet.gov/expapi/verbs/attempted',\n                'display': {\n                    'en-US': 'launched'\n                }\n            },\n            object: {\n                'id': 'http://lxhive.com/activities/lrs-check',\n                'definition': {\n                    'name': {\n                        'en-Us': \"Demos\"\n                    }\n                }\n            }\n        };\n\n        voidingStatement = {\n            actor: {\n                mbox: 'mailto: anonymous@lxhive.com',\n                name: 'Anoymous'\n            },\n            verb : {\n                id: \"http://adlnet.gov/expapi/verbs/voided\",\n                display:{\n                    \"en-US\":\"voided\"\n                }\n            },\n            object: {\n                objectType: \"StatementRef\",\n                id: null\n            }\n        };\n\n        putStatementId = req.xapi.uuid();\n\n        describe('POST /statements', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n                req.xapi(\n                    '/statements',\n                    {\n                        method: 'POST',\n                        data: statement,\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            setTimeout(done, 500);\n                        }\n                    }\n                );\n            });\n\n            it('should send a statement', function(done){\n                assert.strictEqual(result.status, 200, 'response status: 200' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'ok', 'response status message: ok' );\n                assert.strictEqual(Object.prototype.toString.call(result.data), '[object Array]', 'is an array' );\n                assert.strictEqual(result.data.length, 1, 'has one element' );\n                statementId = result.data[0];\n                done();\n            });\n\n        });\n\n        describe('GET /statements', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n                req.xapi(\n                    '/statements',\n                    {\n                        method: 'GET',\n                        query: {statementId: statementId},\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('receive a statement object', function(done){\n                assert.strictEqual(result.status, 200, 'response status: 200' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'ok', 'response status message: ok' );\n                assert.strictEqual(Object.prototype.toString.call(result.data), '[object Object]', 'is an object' );\n                assert.strictEqual(result.data.id, statementId, 'statementId = ' + statementId );\n                done();\n            });\n\n        });\n\n        describe('PUT /statements', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n\n                voidingStatement.object.id = statementId;\n\n                req.xapi(\n                    '/statements',\n                    {\n                        method: 'PUT',\n                        query: {statementId: putStatementId},\n                        data: voidingStatement,\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            setTimeout(done, 500);\n                        }\n                    }\n                );\n            });\n\n            it('should send a statement', function(done){\n                assert.strictEqual(result.status, 204, 'response status: 204' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'no content', 'response status message: No content' );\n                done();\n            });\n\n        });\n\n        describe('GET Voided statement', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n                req.xapi(\n                    '/statements',\n                    {\n                        method: 'GET',\n                        data: statement,\n                        query: {statementId: statementId},\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('reject a request for a voided statement', function(done){\n                assert.strictEqual(result.status, 404, 'response status: 404' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'not found', 'response status message: Not found' );\n                done();\n            });\n\n        });\n\n    });\n\n    ////\n    //  Statement API\n    ////\n\n    describe('State API', function() {\n\n        var now = new Date();\n\n        var _sharedId = req.xapi.uuid();\n\n        var createState = function() {\n            return {\n                stateId: req.xapi.uuid(),\n                activityId: 'http://lxhive.com/activities/' + _sharedId,\n                agent: {'mbox' : 'mailto: '  + _sharedId  + '@lxhive.com' },\n                registration: req.xapi.uuid()\n            };\n        };\n\n        var states = [];\n\n        describe('POST /activities/state', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n\n                var state = createState();\n                states.push(state);\n\n                req.xapi(\n                    '/activities/state',\n                    {\n                        method: 'POST',\n                        query: state,\n                        data: {\n                            custom: now.toISOString()\n                        },\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('should store an activity state', function(done){\n                assert.strictEqual(result.status, 204, 'response status: 204' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'no content', 'response status message: No content' );\n                done();\n            });\n\n        });\n\n        describe('PUT /activities/state', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n\n                var state = createState();\n                states.push(state);\n\n                req.xapi(\n                    '/activities/state',\n                    {\n                        method: 'PUT',\n                        query: state,\n                        data: {\n                            custom: now.toISOString()\n                        },\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            setTimeout(done, 500);\n                        }\n                    }\n                );\n            });\n\n            it('should store an activity state', function(done){\n                assert.strictEqual(result.status, 204, 'response status: 204' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'no content', 'response status message: No content' );\n                done();\n            });\n\n        });\n\n        describe('GET single /activities/state', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n\n                req.xapi(\n                    '/activities/state',\n                    {\n                        method: 'GET',\n                        query: states[0],\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('receive a state object with data', function(done){\n                assert.strictEqual(result.status, 200, 'response status: 200' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'ok', 'response status message: ok' );\n                assert.strictEqual(Object.prototype.toString.call(result.data), '[object Object]', 'is an object' );\n                assert.property(result.data, 'custom', 'result has `custom` property');\n                done();\n            });\n\n        });\n\n        describe('GET multiple /activities/state', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n                req.xapi(\n                    '/activities/state',\n                    {\n                        method: 'GET',\n                        query: {\n                            activityId: states[0].activityId,\n                            agent: states[0].agent,\n                            since: now.toISOString()\n                        },\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('receive an array of state ids', function(done){\n                assert.strictEqual(result.status, 200, 'response status: 200' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'ok', 'response status message: ok' );\n                assert.strictEqual(Object.prototype.toString.call(result.data), '[object Array]', 'is an array');\n                assert.strictEqual(result.data.length, states.length, 'array length matches the previously sent states');\n\n                done();\n            });\n\n        });\n\n        describe('GET single /activities/state', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n\n                req.xapi(\n                    '/activities/state',\n                    {\n                        method: 'GET',\n                        query: states[0],\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('receive a state object with data', function(done){\n                assert.strictEqual(result.status, 200, 'response status: 200' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'ok', 'response status message: ok' );\n                assert.strictEqual(Object.prototype.toString.call(result.data), '[object Object]', 'is an object' );\n                assert.property(result.data, 'custom', 'result has `custom` property');\n                done();\n            });\n\n        });\n\n        describe('DELETE multiple /activities/state', function() {\n\n            var result;\n            var instance;\n\n            before(function(done){\n                req.xapi(\n                    '/activities/state',\n                    {\n                        method: 'DELETE',\n                        query: {\n                            activityId: states[0].activityId,\n                            agent: states[0].agent\n                        },\n                        always: function(res, ins){console.log(res, ins);\n                            result = res;\n                            instance = ins;\n                            done();\n                        }\n                    }\n                );\n            });\n\n            it('delete all writen states', function(done){\n                assert.strictEqual(result.status, 204, 'response status: 204' );\n                assert.strictEqual(result.statusText.toLowerCase(), 'no content', 'response status message: no content' );\n                setTimeout(done, 500);\n            });\n\n        });\n\n\n    });\n\n\n\n})(window.Helper, window.req);\n"]}